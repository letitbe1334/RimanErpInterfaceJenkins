<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.riman.erp.batch.mapper.salesOrderReturn.UniverseSalesOrderReturnMapper">
  	<select id="getSalesOrderReturns" resultType="biz.riman.erp.batch.dto.salesOrderReturn.SalesOrderReturnDto">
    		/* SalesOrderReturn.getSalesOrderReturns */
        --  반품완료 기준 조회
        SELECT 'CBAR' AS CustomerReturnType
              ,ro.return_order_id     --  반품주문ID
              ,ro.return_order_no AS returnOrderByCustomer   --  반품주문번호
              ,so.sales_order_id  --  원주문ID
              ,so.sales_order_no AS purchaseOrderByCustomer  --  원주문번호
              ,iso.sales_order AS ReferenceSDDocument
              ,som.store_login_id AS SoldToParty --  판매처
              ,ro.return_reason
              ,cm.attr_val1 AS SDDocumentReason    --  반품사유
              ,CASE 
                    WHEN ro.refund_delivery_charge_yn = 'Y' THEN 'ZRDD' 
                    ELSE null 
                END AS ConditionType -- 가격유형
              ,CASE 
                    WHEN ro.refund_delivery_charge_yn = 'Y' THEN ROUND(2500 / 1.1)
                    ELSE 0 
                END AS ConditionRateValue -- 배송차감액
              ,'KRW' AS ConditionCurrency -- 통화
          FROM `universe-order`.return_order ro
         INNER JOIN `universe-order`.sales_order so ON ro.origin_order_id = so.sales_order_id
         INNER JOIN `universe-order`.sales_order_member som ON som.sales_order_id = so.sales_order_id
         INNER JOIN `erp-system`.if_sales_order iso ON so.sales_order_no = iso.purchase_order_by_customer 
          LEFT JOIN `erp-system`.code_master cm ON ro.return_reason = cm.code
                                               AND cm.code_group_code = 'RETURN_REMARK'
         WHERE ro.delete_yn = 'N'
           AND ro.return_order_status = 'RETURN_COMPLETED'
           AND NOT EXISTS(SELECT 1 FROM `erp-system`.if_sales_order_return isor
                           WHERE so.sales_order_no = isor.purchase_order_by_customer
                             AND ro.return_order_no = isor.return_order_by_customer
                             AND isor.result_status != 'F')
           AND ro.return_date between #{startDate} and #{endDate}
  	</select>
  	
  	<select id="getSalesOrderReturnItems" resultType="biz.riman.erp.batch.dto.salesOrderReturn.SalesOrderReturnItemDto">
    		/* SalesOrderReturn.getSalesOrderReturnItems */
        SELECT isoi.sales_order AS ReferenceSDDocument
              ,isoi.sales_order_item AS ReferenceSDDocumentItem
              ,item.RequestedQuantity
              ,cm.attr_val1 AS ReturnReason
              ,'100' AS ReturnsRefundExtent
              ,'P' AS ReturnsRefundProcgMode
              ,'0001' AS CustRetItmFollowUpActivity
          FROM (
            SELECT rop.return_order_id 
                  ,rop.product_id
                  ,SUM(rop.qty) as RequestedQuantity
              FROM `universe-order`.return_order_product rop
             WHERE rop.delete_yn = 'N'
               AND rop.return_order_id = #{returnOrderId}
             GROUP BY rop.return_order_id
                     ,rop.product_id
          ) item
         INNER JOIN `universe-order`.return_order ro ON item.return_order_id = ro.return_order_id
         INNER JOIN `universe-order`.sales_order so ON ro.origin_order_id = so.sales_order_id
          LEFT JOIN `erp-system`.code_master cm ON ro.return_reason = cm.code
                                               AND cm.code_group_code = 'RETURN_REMARK'
         INNER JOIN `erp-system`.if_sales_order_item isoi ON so.sales_order_no = isoi.purchase_order_by_customer 
                                                         AND item.product_id = isoi.product_id 
  	</select>
  	
  	<select id="getSalesOrderReturnPayments" resultType="biz.riman.erp.batch.dto.salesOrderReturn.SalesOrderReturnPaymentDto">
    		/* SalesOrderReturn.getSalesOrderReturnPayments */
        SELECT row_number() over(order by r.refund_id) AS ZSequence
              ,r.payment_method as YY1_ZPaymentMethod
              ,r.price as ZAmount
              ,'KRW' as Zcurrency
          FROM `universe-order`.refund r 
         WHERE r.order_id #{returnOrderId}
  	</select>
</mapper>
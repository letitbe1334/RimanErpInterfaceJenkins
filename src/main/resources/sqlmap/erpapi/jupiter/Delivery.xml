<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.riman.erp.batch.mapper.delivery.JupiterDeliveryMapper">
    <select id="getDeliveryDocumentItems" resultType="biz.riman.erp.batch.dto.delivery.DeliveryDocumentItemDto">
    		/* Delivery.getDeliveryDocumentItems */
        SELECT aa.ReferenceSDDocument --  ERP 오더 번호
              ,aa.ReferenceSDDocumentItem -- 품목라인번호
              ,sum(aa.ActualDeliveryQuantity) as ActualDeliveryQuantity -- 배송수량
              ,'EA' AS DeliveryQuantityUnit
              /** 부가 정보 */
              ,aa.purchaseOrderByCustomer --  주문번호
              ,aa.product_id -- 제품
              ,aa.invoice_number    --  송장번호
          FROM (
                    SELECT isoi.sales_order AS ReferenceSDDocument --  ERP 오더 번호
                          ,isoi.sales_order_item AS ReferenceSDDocumentItem -- 품목라인번호
                          ,coalesce(pk.count * sopd.quantity, sopd.quantity) AS ActualDeliveryQuantity -- 배송수량
                           /** 부가 정보 */
                          ,a.sales_order_number AS purchaseOrderByCustomer --  주문번호
                          ,coalesce(pk_pd.product_id, pd.product_id) as product_id
                          ,a.invoice_number
                      FROM (
                              SELECT so.sales_order_id
                                    ,so.sales_order_number
                                    ,min(oi.invoice_number) as invoice_number
                                FROM `jupiter-order`.sales_order so
                               INNER JOIN `jupiter-order`.outbound ob ON so.sales_order_id = ob.sales_order_id 
                                                                     AND ob.delete_yn = 'N'
                               INNER JOIN `jupiter-order`.outbound_invoice oi ON ob.outbound_id = oi.outbound_id
                               WHERE so.delete_yn = 'N'
                                 /** IN_TRANSIT(배송중) */
                                 AND ob.outbound_status = 'IN_TRANSIT'                        
                                 AND DATE_FORMAT(ob.register_invoice_datetime, '%y-%m-%d') between #{startDate} and #{endDate}
                               GROUP BY so.sales_order_id
                                       ,so.sales_order_number
                          ) a
                     INNER JOIN `jupiter-order`.sales_order_product sopd ON a.sales_order_id = sopd.sales_order_id
                     INNER JOIN `jupiter-product`.product pd ON sopd.product_id = pd.product_id
                      LEFT JOIN `jupiter-product`.package pk ON pd.product_id = pk.product_id
                      LEFT JOIN `jupiter-product`.product pk_pd ON pk.composite_product_id = pk_pd.product_id
                     /** 인터페이스 테이블 */
                     INNER JOIN `erp-system`.if_sales_order_item isoi ON a.sales_order_number = isoi.purchase_order_by_customer 
                                                                     AND coalesce(pk_pd.product_id, pd.product_id) = isoi.product_id
                     WHERE NOT EXISTS(SELECT 1 FROM `erp-system`.if_delivery ifd
                                       WHERE a.sales_order_number = ifd.purchase_order_by_customer
                                         AND coalesce(pk_pd.product_id, pd.product_id) = ifd.product_id
                                         AND a.invoice_number = ifd.invoice_number
                                         AND ifd.result_status != 'F')
               ) aa
         GROUP BY aa.ReferenceSDDocument
                 ,aa.purchaseOrderByCustomer
                 ,aa.ReferenceSDDocumentItem
                 ,aa.product_id
                 ,aa.invoice_number
    </select>
</mapper>